{"remainingRequest":"C:\\1.PartitionD\\Work\\6.VuejsWorkShop\\FEBootcamp Vue\\cuddly-octo-pizza\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\1.PartitionD\\Work\\6.VuejsWorkShop\\FEBootcamp Vue\\cuddly-octo-pizza\\src\\components\\Menu.vue?vue&type=style&index=0&id=9bcc0be2&scoped=true&lang=css&","dependencies":[{"path":"C:\\1.PartitionD\\Work\\6.VuejsWorkShop\\FEBootcamp Vue\\cuddly-octo-pizza\\src\\components\\Menu.vue","mtime":1599567828885},{"path":"C:\\1.PartitionD\\Work\\6.VuejsWorkShop\\FEBootcamp Vue\\cuddly-octo-pizza\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\1.PartitionD\\Work\\6.VuejsWorkShop\\FEBootcamp Vue\\cuddly-octo-pizza\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\1.PartitionD\\Work\\6.VuejsWorkShop\\FEBootcamp Vue\\cuddly-octo-pizza\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\1.PartitionD\\Work\\6.VuejsWorkShop\\FEBootcamp Vue\\cuddly-octo-pizza\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\1.PartitionD\\Work\\6.VuejsWorkShop\\FEBootcamp Vue\\cuddly-octo-pizza\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgICAuZmxleC1jb250YWluZXIgewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246Y29sdW1uOwp9CiAgICAuZmxleC1pdGVtIHsKICAgICAgICBwYWRkaW5nOiAxJTsKICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgfQo="},{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Menu.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div class=\"flex-container\">\r\n    <div class=\"flex-item\">\r\n        <div class=\"col-sm-12 col-md-6\">\r\n            <table class=\"table table-hover\">\r\n                <thead class=\"thead-default\">\r\n                    <tr>\r\n                        <th>Size</th>\r\n                        <th>Price</th>\r\n                        <th>Add to basket</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody v-for=\"item in menuItems\" :key=\"item['.key']\">\r\n                    <tr>\r\n                        <td><strong>{{ item.name }}</strong></td>\r\n                    </tr>\r\n                    <tr v-for=\"option in item.options\" :key=\"option['.key']\">\r\n                        <td>{{ option.size }}</td>\r\n                        <td>{{ option.price | currency}}</td>\r\n                        <td><button class=\"btn btn-sm btn-outline-success\" \r\n                                    type=\"button\"\r\n                                    @click=\"addToBasket(item, option)\">+</button></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>      \r\n    </div>  \r\n      <div class=\"flex-item\">\r\n            <div v-if=\"basket.length > 0\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-default\">\r\n                        <tr>\r\n                            <th>Quantity</th>\r\n                            <th>Item</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody v-for=\"item in basket\" :key=\"item['.key']\">\r\n                        <tr>\r\n                            <td>\r\n                                <button class=\"btn btn-sm btn-outline-success\" \r\n                                        type=\"button\"\r\n                                        @click=\"decreaseQuantity(item)\">-</button>\r\n                                <span>{{ item.quantity }}</span>\r\n                                <button class=\"btn btn-sm btn-outline-success\" \r\n                                        type=\"button\"\r\n                                        @click=\"increaseQuantity(item)\">+</button>\r\n                            </td>\r\n                            <td>{{item.name}} {{item.size}}</td>\r\n                            <td>{{ item.price * item.quantity | currency }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <p>Order total: {{ total | currency }}</p>\r\n                <button class=\"btn btn-success btn-block\" @click=\"addNewOrder\">Place Order</button>\r\n            </div>\r\n            <div v-else>\r\n                <p>{{ basketText }}</p> \r\n                <!-- = <p>{{ this.$store.state.orders }}</p> -->\r\n            </div>  \r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n     data(){\r\n        return {\r\n            basketText : 'Your basket is empty!',\r\n            basket: [],\r\n            menuItems: []\r\n        }\r\n    },\r\n    computed: {\r\n        total() {\r\n                var totalCost = 0;\r\n                for( var item in this.basket) {\r\n                    var individualItem = this.basket[item];\r\n                    totalCost += individualItem.quantity * individualItem.price;\r\n                }\r\n                return totalCost;\r\n            }\r\n\r\n    },\r\n    methods : {\r\n         addToBasket(item, option){\r\n                this.basket.push({\r\n                    name: item.name,\r\n                    size: option.size,\r\n                    price: option.price,\r\n                    quantity: 1\r\n                })\r\n            },\r\n            removeFromBasket(item){\r\n                this.basket.splice(this.basket.indexOf(item), 1);\r\n            },\r\n            decreaseQuantity(item) {\r\n                item.quantity--;\r\n                if (item.quantity == 0) {\r\n                    this.removeFromBasket(item);\r\n                }\r\n            },\r\n            increaseQuantity(item) {\r\n                item.quantity++;\r\n            },\r\n            addNewOrder() {\r\n                this.basket = []\r\n                this.basketText = \"Thank you, your order has been placed ! :)\"\r\n            }\r\n\r\n    },\r\n    created: function() {\r\n        fetch(\"http://localhost:3000/menuItems\")\r\n            .then(response => response.json())\r\n            .then(data => (this.menuItems = data));\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .flex-container {\r\n        display: flex;\r\n        flex-direction:column;\r\n}\r\n    .flex-item {\r\n        padding: 1%;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        }\r\n</style>"]}]}